{
  "comments": [
    {
      "key": {
        "uuid": "0ca1d65f_36723904",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1007990
      },
      "writtenOn": "2019-08-09T12:58:07Z",
      "side": 1,
      "message": "could you please add an example?",
      "revId": "4f21d19bfcb67c7a68cc21245615f02198ada383",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec321f90_97db4165",
        "filename": "sh.c",
        "patchSetId": 2
      },
      "lineNbr": 79,
      "author": {
        "id": 1016771
      },
      "writtenOn": "2019-07-25T17:25:50Z",
      "side": 1,
      "message": "If i understand correctly when using a command outside the root directory the first exec will fail then the file descriptor is used to check the file is valid, lastly the exec is run a second time with a fixed path (added backslash to the start). \n\nQ: Can\u0027t you just fix the path both for root dir commands and non root commands?\n   This can remove the need for two exec commands?\nQ: Why check a valid fd just to have exec do the same?",
      "revId": "4f21d19bfcb67c7a68cc21245615f02198ada383",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fb72587_d23e8b42",
        "filename": "sh.c",
        "patchSetId": 2
      },
      "lineNbr": 79,
      "author": {
        "id": 1016686
      },
      "writtenOn": "2019-07-26T06:47:20Z",
      "side": 1,
      "message": "First question: how can you make a path both for root and non root for I\u0027m confused.\nSecond question: Exec can fail for multiple reasons, since this os does not return the reason you have to check if the file is really not there before going to the next exec.",
      "parentUuid": "ec321f90_97db4165",
      "revId": "4f21d19bfcb67c7a68cc21245615f02198ada383",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1e2e986_91b141a4",
        "filename": "sh.c",
        "patchSetId": 2
      },
      "lineNbr": 79,
      "author": {
        "id": 1016771
      },
      "writtenOn": "2019-08-05T14:53:00Z",
      "side": 1,
      "message": "First off i admit i may be misunderstanding something critical.\nSo please correct me if i am wrong.\n\nI will explain what i understood.\nA root command path is in the format \"root_command\" or \"/root_command\" both will be executed by the first exec.\n\nA non root command path is the format \"example_dir/non_root_command\" or \"/example_dir/non_root_command\" where the first format is executed by the second exec (after adding backslash) and the second format by the first exec.\n\nAssuming i understood correctly.\n\nFirst question: can\u0027t the formats be united in to a single one where they all start with \"/\" (root dir)? (Then a single exec can be used on the single path format)\nfor example if all paths formats can be transformed in to there absolute path there for generalizing all formats. \n\nsecond question: In a situation where checking the file descriptor succeeds the check is done in the first exec then again here.\n\nIn the situation where checking the file descriptor fails - the check is done in both the first exec and yet again here then again after added a backslash in the second exec (which can succeed or fail depending on the new path).\n\nI may be mistaken by it seems to me the file descriptor check is a bit redundant.",
      "parentUuid": "8fb72587_d23e8b42",
      "revId": "4f21d19bfcb67c7a68cc21245615f02198ada383",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "195bd5a8_86b73751",
        "filename": "sh.c",
        "patchSetId": 2
      },
      "lineNbr": 79,
      "author": {
        "id": 1016686
      },
      "writtenOn": "2019-08-05T18:23:28Z",
      "side": 1,
      "message": "First question: No, because if you are at the non root directory then /something and something are not the same path. Consider the following layout:\n- root\n-- something\n-- a \u003c-- current directory\n--- something\n\nSecond question: If you are at the \"a\" directory and executing \"something\" fails due to \"something\" execution failure, then you should not go and try to execute \"/something\".",
      "parentUuid": "f1e2e986_91b141a4",
      "revId": "4f21d19bfcb67c7a68cc21245615f02198ada383",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}