{
  "comments": [
    {
      "key": {
        "uuid": "43906a4d_0e0bdaaf",
        "filename": "cgroupstests.c",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 1007990
      },
      "writtenOn": "2019-11-28T13:56:48Z",
      "side": 1,
      "message": "nit: tabs and spaces through the file.",
      "revId": "2aa9d247a0d7185d0e748a1dd5db74df1b09cd44",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f5d113f_5a35937e",
        "filename": "cgroupstests.c",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 1016686
      },
      "writtenOn": "2019-11-28T14:48:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43906a4d_0e0bdaaf",
      "revId": "2aa9d247a0d7185d0e748a1dd5db74df1b09cd44",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d8b05c7_644aec79",
        "filename": "cgroupstests.c",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 1007990
      },
      "writtenOn": "2019-11-28T13:56:48Z",
      "side": 1,
      "message": "tabs",
      "revId": "2aa9d247a0d7185d0e748a1dd5db74df1b09cd44",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a7a20e5_091ec4fa",
        "filename": "cgroupstests.c",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 1016686
      },
      "writtenOn": "2019-11-28T14:48:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d8b05c7_644aec79",
      "revId": "2aa9d247a0d7185d0e748a1dd5db74df1b09cd44",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "786b48ae_09056e0e",
        "filename": "cgroupstests.c",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1007990
      },
      "writtenOn": "2019-11-28T13:56:48Z",
      "side": 1,
      "message": "iiric we have itoa defined somewhere",
      "revId": "2aa9d247a0d7185d0e748a1dd5db74df1b09cd44",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7d5ea83_b5921d6e",
        "filename": "cgroupstests.c",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1016153
      },
      "writtenOn": "2019-11-28T15:17:58Z",
      "side": 1,
      "message": "moved.",
      "parentUuid": "786b48ae_09056e0e",
      "revId": "2aa9d247a0d7185d0e748a1dd5db74df1b09cd44",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba591df4_67beb986",
        "filename": "cgroupstests.c",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 1007990
      },
      "writtenOn": "2019-11-28T14:18:31Z",
      "side": 1,
      "message": "1. are those the only supported features, ATM?\n2. I guess it is the the basic sanity test and policy enforcment validation tests will be followed",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 87,
        "endChar": 67
      },
      "revId": "2aa9d247a0d7185d0e748a1dd5db74df1b09cd44",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8796360_cd1cc4b1",
        "filename": "cgroupstests.c",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 1016153
      },
      "writtenOn": "2019-11-28T15:17:58Z",
      "side": 1,
      "message": "Other tests follow later.",
      "parentUuid": "ba591df4_67beb986",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 87,
        "endChar": 67
      },
      "revId": "2aa9d247a0d7185d0e748a1dd5db74df1b09cd44",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a08d9b7_74674b92",
        "filename": "cgroupstests.c",
        "patchSetId": 1
      },
      "lineNbr": 276,
      "author": {
        "id": 1007990
      },
      "writtenOn": "2019-11-28T14:18:31Z",
      "side": 1,
      "message": "looks like a code duplication (see lines 250-255). IIRIC we have somewhere strcmp implemented, isn\u0027t is?",
      "range": {
        "startLine": 271,
        "startChar": 0,
        "endLine": 276,
        "endChar": 1
      },
      "revId": "2aa9d247a0d7185d0e748a1dd5db74df1b09cd44",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6cebbdfb_eda20f07",
        "filename": "cgroupstests.c",
        "patchSetId": 1
      },
      "lineNbr": 276,
      "author": {
        "id": 1016153
      },
      "writtenOn": "2019-11-28T15:17:58Z",
      "side": 1,
      "message": "4 lines of same code but i don\u0027t see a reason to create a function for it. strcmp() is not applicable here. We search for the word \"cpu\" somewhere in a given string. If you insist for a function to be created i will do it.",
      "parentUuid": "2a08d9b7_74674b92",
      "range": {
        "startLine": 271,
        "startChar": 0,
        "endLine": 276,
        "endChar": 1
      },
      "revId": "2aa9d247a0d7185d0e748a1dd5db74df1b09cd44",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c45724c0_a47a9ff4",
        "filename": "cgroupstests.c",
        "patchSetId": 1
      },
      "lineNbr": 334,
      "author": {
        "id": 1007990
      },
      "writtenOn": "2019-11-28T13:56:48Z",
      "side": 1,
      "message": "1. let\u0027s add the invocation of the cggroupstests to runtests.exp just before the usertests run. \n   note that usertests are printing \"ALL TESTS PASSED\" at the end. And this string serves as an indication that everything is ok\n2. Therefore all those functions shell exit on failure.",
      "range": {
        "startLine": 326,
        "startChar": 0,
        "endLine": 334,
        "endChar": 25
      },
      "revId": "2aa9d247a0d7185d0e748a1dd5db74df1b09cd44",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcab5181_fec029ce",
        "filename": "cgroupstests.c",
        "patchSetId": 1
      },
      "lineNbr": 335,
      "author": {
        "id": 1016753
      },
      "writtenOn": "2020-01-26T01:31:53Z",
      "side": 1,
      "message": "No tests for limiting process\u0027s cpu via cpu controller. \nI added them (after enabling cpu controller):\n\nint cpu_max_fd \u003d open(\"/cgroup/test1/cpu.max\", O_RDWR); \nand then: write(cpu_max_fd, buf, sizeof(buf)); \nbuf: \"300 1000\" as it says in the functional spec.\n\nResult:\nBefore enabling cpu controller:\n\nReading contents of \"/cgroup/test1\":\n-----------------------------------------\nContents of /cgroup/test1/cgroup.procs:\nContents of /cgroup/test1/cgroup.controllers:\ncpu\nContents of /cgroup/test1/cgroup.subtree_control:\nContents of /cgroup/test1/cgroup.events:\npopulated - 0\nContents of /cgroup/test1/cgroup.max.descendants:\n64\nContents of /cgroup/test1/cgroup.max.depth:\n64\nContents of /cgroup/test1/cgroup.stat:\nnr_descendants - 2\nnr_dying_descendants - 0\nContents of /cgroup/test1/cpu.max:\nmax - 4294967295\nperiod - 100000\nContents of /cgroup/test1/cpu.weight:\nweight - 0\nContents of /cgroup/test1/cpu.stat:\nusage_usec - 0\nuser_usec - 0\nsystem_usec - 0\nReading cgroup files test result: OK.\n\nAfter enabling cpu controller:\n\nReading contents of \"/cgroup/test1\":\n-----------------------------------------\nContents of /cgroup/test1/cgroup.procs:\nContents of /cgroup/test1/cgroup.controllers:\ncpu\nContents of /cgroup/test1/cgroup.subtree_control:\ncpu\nContents of /cgroup/test1/cgroup.events:\npopulated - 0\nContents of /cgroup/test1/cgroup.max.descendants:\n64\nContents of /cgroup/test1/cgroup.max.depth:\n64\nContents of /cgroup/test1/cgroup.stat:\nnr_descendants - 2\nnr_dying_descendants - 0\nContents of /cgroup/test1/cpu.max:\nmax - 4294967295\nperiod - 100000\nContents of /cgroup/test1/cpu.weight:\nweight - 0\nContents of /cgroup/test1/cpu.stat:\nusage_usec - 0\nuser_usec - 0\nsystem_usec - 0\nnr_periods - 0\nnr_throttled - 0\nthrottled_usec - 0\n\nReading cgroup files test result: OK.\n\nIssues here:\n1) why cpu.max.max has this value: 4294967295, and cpu.max.period has the value 100000, that per func spec supposed to be max\u0027s value. \n2) The values I set didn\u0027t applied. \n3) Weight is 0, although in spec it said to be \u0027100\u0027. (anyway weight functionality is not implemented)",
      "revId": "2aa9d247a0d7185d0e748a1dd5db74df1b09cd44",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f008a35e_834dbad2",
        "filename": "cgroupstests.c",
        "patchSetId": 1
      },
      "lineNbr": 335,
      "author": {
        "id": 1016753
      },
      "writtenOn": "2020-01-26T14:37:46Z",
      "side": 1,
      "message": "To print cpu.max I added the following in the test_reading_cgroup_files();\n\nint cpu_max_fd \u003d open(\"/cgroup/test1/cpu.max\", O_RDWR);\nempty_string(buf, sizeof(buf));\nresult \u0026\u003d read(cgroup_procs_fd, buf, sizeof(buf)) \u003e\u003d 0;\nprintf(1, \"Contents of /cgroup/test1/cpu.max:\\n%s\\n\", buf);\nresult \u0026\u003d close(cpu_max_fd) \u003d\u003d 0;",
      "parentUuid": "fcab5181_fec029ce",
      "revId": "2aa9d247a0d7185d0e748a1dd5db74df1b09cd44",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}